{"version":3,"sources":["types.js","App.js","index.js"],"names":["WEEKDAYS_SHORT","MONTHS","EVENTS","id","date","Date","title","content","setDate","getDate","get_date","App","React","useState","getInitialState","state","setState","useEffect","searchParams","URLSearchParams","append","range","from","to","fetch","then","response","json","data","console","log","eDay","highlighted","highlighted2","enteredTo","events","isSelectingFirstDay","day","isBeforeFirstDay","DateUtils","isDayBefore","isRangeSelected","handleResetClick","disabledDays","before","selectedDays","className","numberOfMonths","fromMonth","modifiers","onDayClick","prevState","onDayMouseEnter","months","weekdaysShort","toLocaleDateString","onClick","toString","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.ca0315b2.chunk.js","sourcesContent":["export const WEEKDAYS_SHORT = [\"Вс\", \"Пн\", \"Вт\", \"Ср\", \"Чт\", \"Пт\", \"Сб\"];\r\nexport const MONTHS = [\r\n  \"Январь\",\r\n  \"Февраль\",\r\n  \"Март\",\r\n  \"Апрель\",\r\n  \"Май\",\r\n  \"Июнь\",\r\n  \"Июль\",\r\n  \"Август\",\r\n  \"Сентябрь\",\r\n  \"Октябрь\",\r\n  \"Ноябрь\",\r\n  \"Декабрь\"\r\n];\r\n\r\nfunction get_date() {\r\n  let date = new Date();\r\n  date.setDate(date.getDate() + 4);\r\n  return date;\r\n}\r\n\r\nexport const EVENTS = [\r\n  { id: 1, date: new Date(), title: \"title1\", content: \"content1\" },\r\n  { id: 2, date: get_date(), title: \"title2\", content: \"content2\" }\r\n];\r\n","import DayPicker, { DateUtils } from \"react-day-picker\";\nimport React, { useEffect } from \"react\";\nimport \"react-day-picker/lib/style.css\";\nimport \"./styles.css\";\nimport { WEEKDAYS_SHORT, MONTHS, EVENTS } from \"./types\";\n\nfunction App() {\n  const [state, setState] = React.useState(getInitialState());\n\n  /*\n  function getPosts() {\n    console.log('getPosts');\n    var searchParams = new URLSearchParams();\n    searchParams.append(\"from\", state.range.from);\n    searchParams.append(\"to\", state.range.to);\n\n    fetch(\"http://dm2grig.mart-shop.ru/test/calendar/api.php?\" + searchParams)\n      .then((response) => response.json())\n      .then((data) => console.log(\"fetch data: \", data));\n  }\n*/\n  useEffect(() => {\n    //console.log(\"did mount\", state);\n    var searchParams = new URLSearchParams();\n    searchParams.append(\"from\", state.range.from);\n    searchParams.append(\"to\", state.range.to);\n\n    fetch(\"https://dm2grig.mart-shop.ru/test/calendar/api.php?\" + searchParams)\n      .then((response) => response.json())\n      .then((data) => console.log(\"fetch data: \", data));\n  }, []);\n\n  const eDay = {\n    highlighted: [new Date(2021, 5, 26), new Date(2021, 5, 24)],\n    highlighted2: [new Date(2021, 5, 21), new Date(2021, 5, 23)]\n  };\n\n  function getInitialState() {\n    return {\n      range: { from: null, to: null },\n      enteredTo: null,\n      events: EVENTS\n    };\n  }\n  function isSelectingFirstDay(from, to, day) {\n    const isBeforeFirstDay = from && DateUtils.isDayBefore(day, from);\n    const isRangeSelected = from && to;\n    console.log(\"isBeforeFirstDay:\", isBeforeFirstDay);\n    console.log(\"from:\", from);\n    return !from || isBeforeFirstDay || isRangeSelected;\n  }\n\n  function handleDayClick(day) {\n    const { from, to } = state.range;\n    if (from && to && day >= from && day <= to) {\n      handleResetClick();\n      return;\n    }\n    if (isSelectingFirstDay(from, to, day)) {\n      // first click\n      setState((prevState) => ({\n        ...prevState,\n        range: {\n          ...prevState.range,\n          from: day\n        },\n        enteredTo: day\n      }));\n    } else {\n      console.log(\"second click\"); // second click\n      setState((prevState) => ({\n        ...prevState,\n        range: {\n          ...prevState.range,\n          to: day\n        },\n        enteredTo: day\n      }));\n    }\n  }\n\n  function handleDayMouseEnter(day) {\n    const { from, to } = state.range;\n    if (!isSelectingFirstDay(from, to, day)) {\n      setState((prevState) => ({\n        ...prevState,\n        enteredTo: day\n      }));\n    }\n  }\n\n  function handleResetClick() {\n    setState(getInitialState());\n  }\n\n  const { range, enteredTo } = state;\n  //const modifiers = { start: range.from, end: enteredTo };\n  const disabledDays = { before: state.range.from };\n  const selectedDays = [range.from, { from: range.from, to: range.to }]; //o: enteredTo }];\n  return (\n    <div>\n      <h1>Calender 0.2</h1>\n      <DayPicker\n        className=\"Range\"\n        numberOfMonths={2}\n        fromMonth={range.from}\n        selectedDays={selectedDays}\n        disabledDays={disabledDays}\n        modifiers={({ start: range.from, end: enteredTo }, eDay)}\n        onDayClick={handleDayClick}\n        onDayMouseEnter={handleDayMouseEnter}\n        months={MONTHS}\n        weekdaysShort={WEEKDAYS_SHORT}\n      />\n      <div>\n        {!range.from && !range.to && \"Please select the first day.\"}\n        {range.from && !range.to && \"Please select the last day.\"}\n        {range.from &&\n          range.to &&\n          `Selected from ${range.from.toLocaleDateString()} to\n                ${range.to.toLocaleDateString()}`}{\" \"}\n        {range.from && range.to && (\n          <button className=\"link\" onClick={handleResetClick}>\n            Reset\n          </button>\n        )}\n      </div>\n      <p>\n        from: {state.range.from == null ? \"null\" : state.range.from.toString()}\n      </p>\n      <p>to: {state.range.to == null ? \"null\" : state.range.to.toString()}</p>\n      <p>\n        enteredTo:{\" \"}\n        {state.enteredTo == null ? \"null\" : state.enteredTo.toString()}\n      </p>\n    </div>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}